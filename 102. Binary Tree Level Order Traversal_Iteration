Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).

 class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        levels = []
        if root is None:
            return levels
        level = 0
        queue =[root]
        while len(queue) > 0 :
            levels.append([])
            for i in range(len(queue)):
                node = queue.pop(0)
                levels[level].append(node.val)
                if node.left is not None:
                    queue.append(node.left)
                if node.right is not None:
                    queue.append(node.right)
                    
            level += 1
        return levels
